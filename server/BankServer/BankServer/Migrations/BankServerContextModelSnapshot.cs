// <auto-generated />
using System;
using BankServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankServer.Migrations
{
    [DbContext(typeof(BankServerContext))]
    partial class BankServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankServer.Models.Transaction", b =>
                {
                    b.Property<int>("TxnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("CardReceiver")
                        .HasColumnType("bigint");

                    b.Property<long>("CardSender")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DatetimeOfTxn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<int>("TypeOfTxn")
                        .HasColumnType("int");

                    b.HasKey("TxnId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Bank_server.Models.CheckingCard", b =>
                {
                    b.Property<long>("CardNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int>("TxnId")
                        .HasColumnType("int");

                    b.HasKey("CardNum");

                    b.HasIndex("Id");

                    b.HasIndex("TxnId");

                    b.ToTable("CheckingCard");
                });

            modelBuilder.Entity("Bank_server.Models.CreditCard", b =>
                {
                    b.Property<long>("CardNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsInLimit")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LimitWithdrawn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MinSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OwnMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("CardNum");

                    b.HasIndex("Id");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("Bank_server.Models.DepositCard", b =>
                {
                    b.Property<long>("CardNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDeposit")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TxnId")
                        .HasColumnType("int");

                    b.HasKey("CardNum");

                    b.HasIndex("Id");

                    b.HasIndex("TxnId");

                    b.ToTable("DepositCard");
                });

            modelBuilder.Entity("Bank_server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumOfCards")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User","dbo");
                });

            modelBuilder.Entity("Bank_server.Models.CheckingCard", b =>
                {
                    b.HasOne("Bank_server.Models.User", "CardUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankServer.Models.Transaction", "Txn")
                        .WithMany()
                        .HasForeignKey("TxnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bank_server.Models.CreditCard", b =>
                {
                    b.HasOne("Bank_server.Models.User", "CardUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bank_server.Models.DepositCard", b =>
                {
                    b.HasOne("Bank_server.Models.User", "CardUser")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankServer.Models.Transaction", "Txn")
                        .WithMany()
                        .HasForeignKey("TxnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
